import pandas as pd
import numpy as np


#The following line assigns the csv file to the variable "url"
url="https://raw.githubusercontent.com/CodyCoHSG/Hospitals/master/HospInfo.csv"


# The lines below read the csv file and clean it by dropping unnecessary columns.
hospitals=pd.read_csv(url, index_col ="State")
hospitals.drop(hospitals.columns[13:29], axis=1, inplace=True)
hospitals.drop(["Provider ID", "Hospital Ownership", "Meets criteria for meaningful use of EHRs"], axis=1, inplace=True)


# This class is used to change font types/colors.
class color:
   PURPLE = '\033[95m'
   CYAN = '\033[96m'
   DARKCYAN = '\033[36m'
   BLUE = '\033[94m'
   GREEN = '\033[92m'
   YELLOW = '\033[93m'
   RED = '\033[91m'
   BOLD = '\033[1m'
   UNDERLINE = '\033[4m'
   END = '\033[0m'


# In a first step, we ask the user if she/he is still feeling OK after the heart disease analysis.
user_still_ok=input("\nWe hope we did not scare you too much with these findings. Are you still OK (Yes/No)?\n").lower()

# The following part provides different answers to user depending on the input (including a youtube video).
from IPython.display import YouTubeVideo

if user_still_ok=="yes":
    print("\nAwesome, that's very good to hear!")

elif user_still_ok=="no":
    print("\nOh no! To cheer you up, here's a funny cat video: ")
    display(YouTubeVideo('WEkSYw3o5is'))
    print("We're sure that helps.")

# If user enters wrong input, she/he is asked again. This time, with a shorter phrase ("Are you still OK?").
else:
    print("\nPlease answer by either typing in \"Yes\" or \"No\".")
    
    # This while loop is repeated until the user enters the correct input.
    while True:
        user_really_ok=input("\nAre you still OK (Yes/No)?\n").lower()
        if user_really_ok=="yes":
            print("\nAwesome, that's very good to hear!")
            break
        elif user_really_ok=="no":
            print("\nOh no! To cheer you up, here's a funny cat video: ")
            display(YouTubeVideo('WEkSYw3o5is'))
            print("We're sure that helps.")
            break
        else:
            print("\nPlease answer by either typing in \"Yes\" or \"No\".")


# A short statement to lighten the mood and highlight to the userwhat the next steps are.
print("\nAs your medical condition is close to our " + color.BOLD + color.RED + "hearts" + color.END + " (pun intended), we will now recommend you the best possible hospitals near you.")


# The following part asks the user if she/he lives in the U.S., as the dataset is limited to this country.
from IPython.display import Image

# This while loop asks for user's country until correct input is entered (and prints answer - including a gif).
while True:
    user_country=input("\nDo you live in the United States of America (Yes/No)? \n").lower() 
    
    if user_country=="yes":
        print("\nGood for you! Your country is - according to some - being made great again!")
        Trump=Image('https://media.giphy.com/media/26tknCqiJrBQG6bxC/giphy.gif')
        display(Trump)
        break
    
    # If the user does not live in the U.S., she/he is asked to move. The user can only continue once moved.
    elif user_country=="no":
        print("\nWhat a pity. Please move to the USA so we can provide you with hospital recommendations. To facilitate the process, here's the application link for a U.S. Green Card: https://www.uscis.gov/greencard")
        while True:
            moved = input("\nHave you moved (Yes/No)? \n").lower()
            if moved == "no":
                print("\nPlease do so as soon as possible - we will be waiting.")
            elif moved == "yes":
                print("\nGreat! Welcome to the USA!")
                break
            else:
                print("\nPlease answer by either typing in \"Yes\" or \"No\".")
        break
    
    else:
        print("\nPlease answer by either typing in \"Yes\" or \"No\".")


# The following part asks for the user's state abbreviation and provides a website to find it.
print("\nTo find the best hospital near you, please enter the two-letter abbreviation of the state you currently live in.")
print("You can check your state's abbreviation here: https://abbreviations.yourdictionary.com/articles/state-abbrev.html")

# This while loop asks the user to enter the state abbreviation until she/he enters one.
while True:
    
    # The user's state abbreviation is used to access the specific hospital data of that state (using .loc).
    try:
        user_state=input("\nYour state's abbreviation: \n").upper()
        user_state_hospitals = hospitals.loc[user_state]
        break
    
    except KeyError:
        print("\nUnfortunately, you did not enter a valid state abbreviation, please try again.")


# These two lines print the amount of hospitals in the user's state and display the next steps
print("\nOverall, there are " + str(len(user_state_hospitals.index)) + " hospitals in your state (" + user_state + ").")
print("However, we only want to show you the hospitals with the best rankings. \n\nThese five hospitals are the highest-ranked (from 1 to 5; 5 being the best) in your state:\n")


# The following part cleans the dataset for the purpose of displaying the best 5 hospitals in the user's state
# Any unnecessary/unavailable data is dropped, values are sorted, and a new index is set
# Then, the column displaying the Hospital overall rating is highlighted green
best_hospitals=user_state_hospitals.set_index('Hospital overall rating')
best_hospitals.drop("Hospital overall rating footnote", axis=1, inplace=True)
best_hospitals=best_hospitals.drop("Not Available", axis=0)
best_hospitals=best_hospitals.sort_values(by="Hospital overall rating", ascending=False)
best_hospitals=best_hospitals.reset_index()
display(best_hospitals.head().style.apply(lambda x: ['background: #b1db57' if x.name == "Hospital overall rating" else '' for i in x]))


# This line prints a final statement to the user after having showed the best hospitals in her/his state
print(color.BOLD + color.GREEN + "\nGood luck and drive safely to your hospital-of-choice!" + color.END)
